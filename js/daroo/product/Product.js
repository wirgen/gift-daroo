// Generated by CoffeeScript 1.10.0
(function () {
  this.Product = (function () {
    var convertPrice, getNewPrice, onInit, onLoadedPrice, onLoadedProduct, pad, reBasket, showStep

    function Product (type1) {
      this.type = type1
      Product.cont = {}
      Product.set('type', this.type)
    }

    Product.set = function (k, v) {
      Product.cont[k] = v
    }

    Product.get = function (k) {
      return Product.cont[k]
    }

    Product.initProduct = function () {
      onInit()
    }

    onInit = function () {
      var type
      type = Product.get('type')
      if (type.length) {
        return showStep(type)
      }
    }

    showStep = function (name) {
      var postLoad
      postLoad = void 0
      name = Str.ucfirst(name)
      postLoad = eval('onLoaded' + name + '()')
      return false
    }

    onLoadedProduct = function () {
      $('div.order-block a.btn, div.rev-details a.compare-btn').on('click', function (e) {
        var $collapsible, $isMobile, $length, $popup
        $isMobile = $('#zone-span').attr('data-is-mobile') === '1'
        if (!$isMobile) {
          return
        }
        e.preventDefault()
        $popup = $('div.popup-fast-order')
        if ($popup.length !== 1) {
          return false
        }
        $popup.stop().velocity({
          right: 0
        }, 150, 'linear')
        $length = $popup.find('div.info.details-accordion').find('.accordion-header').length
        $collapsible = $length > 1
        $popup.find('div.info.details-accordion').accordion({
          collapsible: $collapsible,
          active: false,
          header: '.accordion-header',
          heightStyle: 'content'
        })
        $popup.find('.popup-header a.back').on('click', function (e) {
          e.preventDefault()
          return $popup.stop().velocity({
            right: '-100%'
          }, 150, 'linear')
        })
        return $popup.find('label.checkbox').on('click', function (e) {
          var $lng
          e.preventDefault()
          if ($(this).hasClass('active')) {
            $(this).find('input[type=checkbox]').removeAttr('checked')
          } else {
            $(this).find('input[type=checkbox]').attr('checked', 'checked')
          }
          $(this).toggleClass('active')
          $lng = $popup.find('label.checkbox.active').length
          if ($lng < 1) {
            $popup.find('a.btn.gotocart').addClass('disable')
            $popup.find('a.btn.btnToGo.cart-postponed').addClass('disable')
          } else {
            $popup.find('a.btn.gotocart').removeClass('disable')
            $popup.find('a.btn.btnToGo.cart-postponed').removeClass('disable')
          }
          $popup.find('a.btn.gotocart').on('click', function (e) {
            var additionalIds, href, self
            e.preventDefault()
            self = $(this)
            if (self.hasClass('disable')) {
              return false
            }
            href = self.data('ajax-url')
            additionalIds = []
            $popup.find('label.checkbox.active > input[type=checkbox]').each(function () {
              return additionalIds.push($(this).data('id'))
            })
            if (additionalIds.length > 0) {
              href = href.replace('/0', '/' + additionalIds.shift())
              return Url.post(href, $.param({
                additional_ids: additionalIds
              }), function (data) {
                var basketUrl
                if (data.status === 'error') {
                  return alert(data.reply)
                } else {
                  basketUrl = self.attr('data-basket-url')
                  return window.location.href = basketUrl
                }
              })
            } else {
              return self.addClass('disable')
            }
          })
          return $popup.find('a.btn.btnToGo.cart-postponed').on('click', function (e) {
            var additionalIds, basketLink, href, mainElement, oldHref, self
            e.preventDefault()
            self = $(this)
            if (self.hasClass('disable')) {
              return false
            }
            mainElement = $(this)
            oldHref = mainElement.data('ajax-url')
            additionalIds = []
            $popup.find('label.checkbox.active > input[type=checkbox]').each(function () {
              return additionalIds.push($(this).data('id'))
            })
            if (additionalIds.length > 0) {
              href = oldHref.replace('/0', '/' + additionalIds.shift())
              Url.post(href, $.param({
                additional_ids: additionalIds
              }), function (data) {
                var basketUrl
                if (data.status === 'error') {
                  return alert(data.reply)
                } else {
                  if (mainElement.hasClass('add-set-btn')) {
                    basketUrl = self.attr('data-basket-url')
                    return window.location.href = basketUrl
                  } else {
                    return reBasket()
                  }
                }
              })
              mainElement.attr('data-ajax-url', oldHref)
              basketLink = $('div.basket > a.basketLink')
              $popup.find('.popup-header a.back').trigger('click')
              basketLink.trigger('click', 100)
              $popup.find('label.checkbox.active').each(function () {
                return $(this).removeClass('active')
              })
              return $popup.find('i.remove').trigger('click')
            } else {
              return self.addClass('disable')
            }
          })
        })
      })
      $('#booking-btn').live('click', function (e) {
        var dataId, dataName, dataPrice, dataSupplier, dataUsageCondition
        e.preventDefault()
        if ($(this).hasClass('disabled')) {
          return false
        }
        $(this).addClass('disabled')
        dataId = $(this).attr('data-id')
        dataName = $(this).attr('data-name')
        dataUsageCondition = $(this).attr('data-usage-condition')
        dataPrice = $(this).attr('data-price')
        dataSupplier = $(this).attr('data-supplier')
        if (eval('typeof ' + 'carrotquest') !== 'undefined') {
          carrotquest.track('booking_from_site', {
            'id': dataId,
            'price_name': dataName,
            'price_usage_condition': dataUsageCondition,
            'price_price': dataPrice,
            'price_supplier_name': dataSupplier
          })
        } else {
          alert('Невозможно забронировать услугу, обратитесь в службу поддержки')
        }
        $(this).removeClass('disabled')
        return false
      })
      $('#set-order-btn').live('click', function (e) {
        var clone, elem, href, isMobile, liImg, var_left, var_top
        e.preventDefault()
        if (eval('typeof ' + 'VK') !== 'undefined') {
          VK.Retargeting.Event('add-to-cart')
        }
        liImg = null
        href = $(this).attr('href')
        elem = $(this)
        if (elem.hasClass('disable-button') || elem.attr('disabled')) {
          return false
        }
        elem.addClass('disable-button')
        elem.prop('disable', true)
        var_left = $('.basket').offset().left
        var_top = $('.basket').offset().top
        isMobile = !!$(this).attr('data-mobile')
        if (isMobile) {
          $('.details-slider li').each(function (e) {
            if ($(this).is(':visible')) {
              return liImg = $(this).find('img')
            }
          })
        } else {
          $('.detail-slider li').each(function (e) {
            if ($(this).is(':visible')) {
              return liImg = $(this).find('img')
            }
          })
        }
        if (liImg !== null && liImg !== void 0) {
          clone = liImg.clone()
          Url.post(href, 'isset=1', function (data) {
            var basketUrl
            elem.removeClass('disable-button')
            elem.removeAttr('disabled')
            if (data.status === 'error') {
              return alert(data.reply)
            } else {
              if (isMobile) {
                reBasket()
              } else {
                clone.css({
                  'position': 'absolute',
                  'z-index': '11100',
                  top: $('.detail-slider').offset().top,
                  left: $('.detail-slider').offset().left
                }).appendTo('body').animate({
                  opacity: 0.05,
                  left: var_left,
                  top: var_top,
                  width: 20
                }, 1000, function () {
                  return clone.remove()
                })
                if (elem.hasClass('add-set-btn')) {
                  basketUrl = elem.attr('data-basket-url')
                  window.location.href = basketUrl
                } else {
                  reBasket()
                }
              }
              if (eval('typeof ' + 'fbq') !== 'undefined') {
                fbq('track', 'AddToCart', {
                  content_ids: [data.reply.fb.id],
                  content_type: 'product'
                })
              }
              if (eval('typeof ' + 'carrotquest') !== 'undefined') {
                carrotquest.track('$cart_added', {
                  'id': data.reply.carrot.id,
                  '$name': data.reply.carrot.name,
                  '$url': data.reply.carrot.url,
                  '$amount': data.reply.carrot.amount,
                  '$img': data.reply.carrot.img
                })
                carrotquest.identify([
                  {
                    op: 'add',
                    key: '$cart_amount',
                    value: data.reply.carrot.amount
                  }, {
                    op: 'union',
                    key: '$cart_items',
                    value: data.reply.carrot.name
                  }
                ])
              }
              if (data.reply.vk.is_event) {
                if (eval('typeof ' + 'VK') !== 'undefined') {
                  return VK.Retargeting.ProductEvent(data.reply.vk.event_data.list_id, data.reply.vk.event_data.name, {
                    'products': [
                      {
                        'id': data.reply.vk.event_data.id
                      }
                    ],
                    'total_price': data.reply.vk.event_data.price
                  })
                }
              }
            }
          })
        } else {
          window.location.href = href
        }
        return false
        return $('#target').clone().css({
          'position': 'absolute',
          'z-index': '100'
        }).appendTo('.order-btn').animate({
          opacity: 0.5,
          marginLeft: 700,
          width: 50,
          height: 50
        }, 700, function () {
          return $(this).remove()
        })
      })
      $('#order-button, .buttons-holder .order-btn.product-order-btn, a.comparelink, a.another-suppliers-show-link, a.comments-compare-prices').live('click', function (e) {
        var isFromFixed
        e.preventDefault()
        isFromFixed = $(this).parents('div.detail-order-holder').hasClass('fixed')
        if (isFromFixed) {
          $('a.product-to-basket-ajax').addClass('need-widget')
        } else {
          $('a.product-to-basket-ajax').removeClass('need-widget')
        }
        $('.fastorder3').stop().fadeIn(300, function () {
          var checked, childrenCont, container, fastOrderCont, neededWidth, ulContainer
          $('.fastorder3 table').stop().fadeIn(300)
          checked = $('.fastorder3 label.checkbox.active').length
          if (checked == 0) {
            $('a.product-to-basket').addClass('disable')
            $('a.product-to-basket-ajax').addClass('disable')
          } else {
            $('a.product-to-basket').removeClass('disable')
            $('a.product-to-basket-ajax').removeClass('disable')
          }
          container = $(this).find('div.fastOrderTabsCont')
          fastOrderCont = $(this).find('div.fastOrderCont')
          childrenCont = container.children('div.fastOrderTabCont.active')
          ulContainer = childrenCont.find('ul')
          neededWidth = 0
          ulContainer.find('li').each(function (index, val) {
            if (index < 3) {
              return neededWidth += $(val).width()
            }
          })
          neededWidth += parseInt(fastOrderCont.css('padding-left').replace(/([a-zA-Z]+)/, '')) + parseInt(fastOrderCont.css('padding-right').replace(/([a-zA-Z]+)/, ''))
          fastOrderCont.css('min-width', neededWidth + 'px')
          return childrenCont.niceScroll({
            cursorcolor: '#ebebeb',
            autohidemode: false,
            railoffset: {
              left: 0
            },
            cursorfixedheight: 70
          })
        })
        return false
      })
      $('.fastOrderTabs li a').click(function (e) {
        var childrenCont, list, tabs
        e.preventDefault()
        list = $(this).parent('li').parent('ul')
        tabs = $(this).parent('li').parent('ul').next('.fastOrderTabsCont')
        list.find('li').each(function () {
          return $(this).removeClass('active')
        })
        $(this).parent().addClass('active')
        tabs.find('.fastOrderTabCont').each(function () {
          return $(this).removeClass('active')
        })
        tabs.find('.fastOrderTabCont').eq(list.find('li.active').index()).addClass('active')
        childrenCont = tabs.children('div.fastOrderTabCont.active')
        childrenCont.niceScroll({
          cursorcolor: '#ebebeb',
          autohidemode: false,
          railoffset: {
            left: 0
          },
          cursorfixedheight: 70
        })
      })
      $('.checkbox').click(function () {
        var checked
        if ($(this).find('input').attr('checked')) {
          $(this).addClass('active')
        } else {
          $(this).removeClass('active')
        }
        checked = $('.fastorder3 label.checkbox.active').length
        if (checked == 0) {
          $('a.product-to-basket').addClass('disable')
          $('a.product-to-basket-ajax').addClass('disable')
        } else {
          $('a.product-to-basket').removeClass('disable')
          $('a.product-to-basket-ajax').removeClass('disable')
        }
      })
      $('div.buttons-holder a.mobile-order-btn').on('click', function (e) {
        e.preventDefault()
        return $('.d-order-select dt span').trigger('click')
      })
      $('a.product-to-basket').on('click', function (e) {
        var additionalIds, href, mainElement
        e.preventDefault()
        mainElement = $(this)
        if ($(this).hasClass('disable')) {
          return
        }
        href = $(this).data('ajax-url')
        additionalIds = []
        if (mainElement.hasClass('disable-button') || mainElement.attr('disabled')) {
          return
        }
        mainElement.addClass('disable-button')
        mainElement.prop('disabled', true)
        $('div.fastOrderCont label.checkbox.active > input[type=checkbox]').each(function () {
          return additionalIds.push($(this).data('id'))
        })
        if (additionalIds.length > 0) {
          href = href.replace('/0', '/' + additionalIds.shift())
          Url.post(href, $.param({
            additional_ids: additionalIds
          }), function (data) {
            var basketUrl
            mainElement.removeClass('disable-button')
            mainElement.removeAttr('disabled')
            if (data.status === 'error') {
              return alert(data.reply)
            } else {
              basketUrl = Product.get('basketUrl')
              return window.location.href = basketUrl
            }
          })
        } else {
          $(this).addClass('disable')
        }
      })
      $('a.add-set-btn').on('click', function (e) {
        var href
        e.preventDefault()
        if ($(this).hasClass('disable')) {
          return
        }
        href = $(this).attr('href')
        Url.post(href, [], function (data) {
          var basketUrl
          if (data.status === 'error') {
            return alert(data.reply)
          } else {
            basketUrl = Product.get('basketUrl')
            return window.location.href = basketUrl
          }
        })
      })
      $('a.product-to-basket-ajax').click(function () {
        var additionalIds, href, mainElement, oldHref
        if ($(this).hasClass('disable')) {
          return
        }
        mainElement = $(this)
        oldHref = mainElement.data('ajax-url')
        additionalIds = []
        if (mainElement.hasClass('disable-button') || mainElement.attr('disabled')) {
          return
        }
        mainElement.addClass('disable-button')
        mainElement.prop('disabled', true)
        $('div.fastOrderCont label.checkbox.active > input[type=checkbox]').each(function () {
          return additionalIds.push($(this).data('id'))
        })
        if (additionalIds.length > 0) {
          href = oldHref.replace('/0', '/' + additionalIds.shift())
          Url.post(href, $.param({
            additional_ids: additionalIds
          }), function (data) {
            var basketLink
            mainElement.removeClass('disable-button')
            mainElement.removeAttr('disabled')
            if (data.status === 'error') {
              return alert(data.reply)
            } else {
              if (mainElement.hasClass('add-set-btn')) {
                return window.location.replace(Product.get('basketUrl'))
              } else {
                reBasket()
                mainElement.attr('data-ajax-url', oldHref)
                basketLink = $('div.basket > a.basketLink')
                basketLink.trigger('click', 100)
                return $('.fastorder3 label.checkbox.active').each(function () {
                  return $(this).removeClass('active')
                })
              }
            }
          })
          return $('.fastOrder table').stop().fadeOut(300, function () {
            $('.fastOrder').stop().fadeOut(300)
          })
        } else {

        }
      })
    }

    onLoadedPrice = function () {
      $('#booking-btn').live('click', function (e) {
        var dataId, dataName, dataPrice, dataSupplier, dataUsageCondition
        e.preventDefault()
        if ($(this).hasClass('disabled')) {
          return false
        }
        $(this).addClass('disabled')
        dataId = $(this).attr('data-id')
        dataName = $(this).attr('data-name')
        dataUsageCondition = $(this).attr('data-usage-condition')
        dataPrice = $(this).attr('data-price')
        dataSupplier = $(this).attr('data-supplier')
        if (eval('typeof ' + 'carrotquest') !== 'undefined') {
          carrotquest.track('booking_from_site', {
            'id': dataId,
            'price_name': dataName,
            'price_usage_condition': dataUsageCondition,
            'price_price': dataPrice,
            'price_supplier_name': dataSupplier
          })
        } else {
          alert('Невозможно забронировать услугу, обратитесь в службу поддержки')
        }
        $(this).removeClass('disabled')
        return false
      })
      $('div.order-block a.btn').on('click', function (e) {
        var $collapsible, $isMobile, $length, $popup
        $isMobile = $('#zone-span').attr('data-is-mobile') === '1'
        if (!$isMobile) {
          return
        }
        e.preventDefault()
        $popup = $('div.popup-fast-order')
        if ($popup.length !== 1) {
          return false
        }
        $popup.stop().velocity({
          right: 0
        }, 150, 'linear')
        $length = $popup.find('div.info.details-accordion').find('.accordion-header').length
        $collapsible = $length > 1
        $popup.find('div.info.details-accordion').accordion({
          collapsible: $collapsible,
          active: false,
          header: '.accordion-header',
          heightStyle: 'content'
        })
        $popup.find('.popup-header a.back').on('click', function (e) {
          e.preventDefault()
          return $popup.stop().velocity({
            right: '-100%'
          }, 150, 'linear')
        })
        return $popup.find('label.checkbox').on('click', function (e) {
          var $lng
          e.preventDefault()
          if ($(this).hasClass('active')) {
            $(this).find('input[type=checkbox]').removeAttr('checked')
          } else {
            $(this).find('input[type=checkbox]').attr('checked', 'checked')
          }
          $(this).toggleClass('active')
          $lng = $popup.find('label.checkbox.active').length
          if ($lng < 1) {
            $popup.find('a.btn.gotocart').addClass('disable')
            $popup.find('a.btn.btnToGo.cart-postponed').addClass('disable')
          } else {
            $popup.find('a.btn.gotocart').removeClass('disable')
            $popup.find('a.btn.btnToGo.cart-postponed').removeClass('disable')
          }
          $popup.find('a.btn.gotocart').on('click', function (e) {
            var additionalIds, href, self
            e.preventDefault()
            self = $(this)
            if (self.hasClass('disable')) {
              return false
            }
            href = self.data('ajax-url')
            additionalIds = []
            $popup.find('label.checkbox.active > input[type=checkbox]').each(function () {
              return additionalIds.push($(this).data('id'))
            })
            if (additionalIds.length > 0) {
              href = href.replace('/0', '/' + additionalIds.shift())
              return Url.post(href, $.param({
                additional_ids: additionalIds
              }), function (data) {
                var basketUrl
                if (data.status === 'error') {
                  return alert(data.reply)
                } else {
                  basketUrl = self.attr('data-basket-url')
                  return window.location.href = basketUrl
                }
              })
            } else {
              return self.addClass('disable')
            }
          })
          return $popup.find('a.btn.btnToGo.cart-postponed').on('click', function (e) {
            var additionalIds, basketLink, href, mainElement, oldHref, self
            e.preventDefault()
            self = $(this)
            if (self.hasClass('disable')) {
              return false
            }
            mainElement = $(this)
            oldHref = mainElement.data('ajax-url')
            additionalIds = []
            $popup.find('label.checkbox.active > input[type=checkbox]').each(function () {
              return additionalIds.push($(this).data('id'))
            })
            if (additionalIds.length > 0) {
              href = oldHref.replace('/0', '/' + additionalIds.shift())
              Url.post(href, $.param({
                additional_ids: additionalIds
              }), function (data) {
                if (data.status === 'error') {
                  return alert(data.reply)
                } else {
                  if (mainElement.hasClass('add-set-btn')) {
                    return window.location.replace(self.attr('data-basket-url'))
                  } else {
                    return reBasket()
                  }
                }
              })
              mainElement.attr('data-ajax-url', oldHref)
              basketLink = $('div.basket > a.basketLink')
              $popup.find('.popup-header a.back').trigger('click')
              basketLink.trigger('click', 100)
              $popup.find('label.checkbox.active').each(function () {
                return $(this).removeClass('active')
              })
              return $popup.find('i.remove').trigger('click')
            } else {
              return self.addClass('disable')
            }
          })
        })
      })
      $('a.comparelink, a.another-suppliers-show-link').live('click', function (e) {
        e.preventDefault()
        $('.fastorder3').stop().fadeIn(300, function () {
          var checked, childrenCont, container, fastOrderCont, neededWidth, ulContainer
          $('.fastorder3 table').stop().fadeIn(300)
          checked = $('.fastorder3 label.checkbox.active').length
          if (checked == 0) {
            $('a.product-to-basket').addClass('disable')
            $('a.product-to-basket-ajax').addClass('disable')
          } else {
            $('a.product-to-basket').removeClass('disable')
            $('a.product-to-basket-ajax').removeClass('disable')
          }
          container = $(this).find('div.fastOrderTabsCont')
          fastOrderCont = $(this).find('div.fastOrderCont')
          childrenCont = container.children('div.fastOrderTabCont.active')
          ulContainer = childrenCont.find('ul')
          neededWidth = 0
          ulContainer.find('li').each(function (index, val) {
            if (index < 3) {
              return neededWidth += $(val).width()
            }
          })
          neededWidth += parseInt(fastOrderCont.css('padding-left').replace(/([a-zA-Z]+)/, '')) + parseInt(fastOrderCont.css('padding-right').replace(/([a-zA-Z]+)/, ''))
          fastOrderCont.css('min-width', neededWidth + 'px')
          return childrenCont.niceScroll({
            cursorcolor: '#ebebeb',
            autohidemode: false,
            railoffset: {
              left: 0
            },
            cursorfixedheight: 70
          })
        })
        return false
      })
      $('.fastOrderTabs li a').click(function (e) {
        var list, tabs
        e.preventDefault()
        list = $(this).parent('li').parent('ul')
        tabs = $(this).parent('li').parent('ul').next('.fastOrderTabsCont')
        list.find('li').each(function () {
          return $(this).removeClass('active')
        })
        $(this).parent().addClass('active')
        tabs.find('.fastOrderTabCont').each(function () {
          return $(this).removeClass('active')
        })
        tabs.find('.fastOrderTabCont').eq(list.find('li.active').index()).addClass('active')
      })
      $('.checkbox').click(function () {
        var checked
        if ($(this).find('input').attr('checked')) {
          $(this).addClass('active')
        } else {
          $(this).removeClass('active')
        }
        checked = $('.fastorder3 label.checkbox.active').length
        if (checked == 0) {
          $('a.product-to-basket').addClass('disable')
          $('a.product-to-basket-ajax').addClass('disable')
        } else {
          $('a.product-to-basket').removeClass('disable')
          $('a.product-to-basket-ajax').removeClass('disable')
        }
      })
      return $('.order-btn, a.add-set-btn').click(function () {
        var clone, elem, href, liImg, var_left, var_top
        liImg = null
        href = $(this).attr('href')
        elem = $(this)
        if (elem.hasClass('disable-button') || elem.attr('disabled')) {
          return false
        }
        elem.addClass('disable-button')
        elem.prop('disabled', true)
        var_left = $('.basket').offset().left
        var_top = $('.basket').offset().top
        $('.detail-slider li').each(function (e) {
          if ($(this).is(':visible')) {
            return liImg = $(this).find('img')
          }
        })
        if (liImg !== null && liImg !== void 0) {
          clone = liImg.clone()
          Url.post(href, '', function (data) {
            var basketLink, basketUrl
            elem.removeClass('disable-button')
            elem.removeAttr('disabled')
            if (data.status === 'error') {
              return alert(data.reply)
            } else {
              clone.css({
                'position': 'absolute',
                'z-index': '11100',
                top: $('.detail-slider').offset().top,
                left: $('.detail-slider').offset().left
              }).appendTo('body').animate({
                opacity: 0.05,
                left: var_left,
                top: var_top,
                width: 20
              }, 1000, function () {
                return clone.remove()
              })
              if (elem.hasClass('add-set-btn')) {
                basketUrl = elem.attr('data-basket-url')
                return window.location.href = basketUrl
              } else {
                reBasket()
                basketLink = $('div.basket > a.basketLink')
                return basketLink.trigger('click', 100)
              }
            }
          })
        } else {
          window.location.href = href
        }
        return false
        return $('#target').clone().css({
          'position': 'absolute',
          'z-index': '100'
        }).appendTo('.order-btn').animate({
          opacity: 0.5,
          marginLeft: 700,
          width: 50,
          height: 50
        }, 700, function () {
          return $(this).remove()
        })
      })
    }

    reBasket = function () {
      var rebasketUrl
      rebasketUrl = Product.get('rebasketUrl')
      Url.post(rebasketUrl, '', function (data) {
        var $priceHTML, $zone, basketUl, html, i, items
        if (data.status === 'error') {
          console.log(data.reply)
          if ($('span.empty-text').length > 0) {
            $('.basketCont').css('width', '300px')
            $('span.empty-text').show()
            return $('div.basketOrder').hide()
          }
        } else {
          $zone = $('span#zone-span').attr('data-zone')
          if (data.reply.isMobile) {
            basketUl = $('.popupBasketCont')
            basketUl.find('div.item').remove()
            $('#totalItems').html(data.reply.totals.count + ' шт.')
            $('span.total-items-count').html(data.reply.totals.count)
            $('#cart-totalItems').html(data.reply.totals.count)
            setTimeout((function () {
              var popup
              popup = $('.popupBasket')
              if (popup.css('display') !== 'none') {
                popup.stop().velocity({
                  right: 0
                }, 150, 'linear')
                return $('body').css('overflow', 'hidden')
              }
            }), 1000)
          } else {
            basketUl = $('.basketCont').find('ul')
            $('.basketCont').find('li').remove()
            $('#cart-totalItems').html(data.reply.totals.count)
          }
          items = data.reply.items
          $('#cart-inline-total').html(data.reply.totals.real.formatMoney() + ' ' + data.reply.currency)
          if (items.length) {
            if (data.reply.only_gift) {
              $('.self-cart-btn').hide()
            } else {
              $('.self-cart-btn').show()
            }
            $('.basketContDisplay').show()
            i = 0
            if ($('span.empty-text').length > 0) {
              $('.basketCont').css('width', '500px')
              $('span.empty-text').hide()
              $('div.basketOrder').show()
            }
            while (i < data.reply.items.length) {
              if (data.reply.isMobile) {
                $('div.popupBasket').removeAttr('style')
                html = '<div class="item"  id="cart-item-' + data.reply.items[i].id + '"> <div class="itemCont"> <a class="itemLink" href="#"></a> <img src="' + data.reply.items[i].image + '"> <div class="itemText"> <h3>' + data.reply.items[i].name + '</h3> <div class="itemInf"></div> </div> </div> <div class="itemParam"> <i id="cart-item-remove-' + data.reply.items[i].id + '" data-href="' + data.reply.items[i].url + '" class="remove cart-inline-remove"></i> <div class="price">' + data.reply.items[i].price + ' ' + data.reply.items[i].currency + '</div> <div class="price">' + data.reply.items[i].count + ' шт.</div> </div> </div>'
                basketUl.prepend(html)
                i++
              } else {
                $priceHTML = data.reply.items[i].price + ' ' + data.reply.items[i].currency
                html = '<li id="cart-item-' + data.reply.items[i].id + '"> <img src="' + data.reply.items[i].image + '"> <h4>' + data.reply.items[i].name + '</h4> <div class="price">' + $priceHTML + '<span class="item_count"> x ' + data.reply.items[i].count + '</span></div> <p>' + data.reply.items[i].usageCondition + '</p> <a id="cart-item-' + data.reply.items[i].id + '" data-href="' + data.reply.items[i].url + '" class="cart-remove cart-inline-remove"></a> </li>'
                basketUl.append(html)
                i++
              }
            }
            if (!$('.basket').hasClass('active')) {
              return $('.basketLink').trigger('click')
            }
          } else {
            if ($('span.empty-text').length > 0) {
              $('.basketCont').css('width', '300px')
              $('span.empty-text').show()
              $('div.basketOrder').hide()
            }
            $('.popupBasket').stop().velocity({
              right: '-100%'
            }, 200, 'linear')
            $('.basketCont').find('li').remove()
            $('.basketCont').removeAttr('style')
            $('#cart-totalItems').html('')
            return $('#cart-inline-total').html('')
          }
        }
      })
    }

    getNewPrice = function (price) {
      var $floor, $fraction, $isTens
      price = '' + price + ''
      price = price.replace(',', '.')
      price = price.replace(' ', '')
      price = parseFloat(price)
      $floor = Math.floor(price)
      $fraction = price - $floor
      $isTens = $fraction * 10 > 1
      $fraction = Math.floor(Math.round($fraction * 100))
      if ($isTens) {
        $fraction = pad($fraction, 2, '0', 'right')
      } else {
        $fraction = pad($fraction, 2, '0', 'left')
      }
      return {
        floor: $floor,
        fraction: $fraction
      }
    }

    convertPrice = function (priceVal) {
      priceVal = '' + priceVal + ''
      priceVal = priceVal.replace(',', '.')
      priceVal = priceVal.replace(' ', '')
      priceVal = parseFloat(priceVal)
      return priceVal * 10000
    }

    pad = function ($val, $maxLen, $pad, $direction) {
      var $padded
      $padded = '' + $val + ''
      if ($direction === 'left') {
        while ($padded.length < $maxLen) {
          $padded = $pad + $padded
        }
      } else {
        while ($padded.length < $maxLen) {
          $padded = $padded + $pad
        }
      }
      return $padded
    }

    return Product

  })()

}).call(this)

//# sourceMappingURL=Product.js.map
